name: Continuous Testing and Docs Publication

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  run-linter:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.8.6"]

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Run pre-commit hooks
        run: |
          python -m pip install pre-commit
          pre-commit run --all

      - name: Run pre-commit hooks
        run: |
          python -m pip install pre-commit
          pre-commit run --all

  build-and-deploy-docs:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.8"]
    env:
      DEMO_ACCOUNT_ID: ${{ secrets.DEMO_ACCOUNT_ID }}
      DEMO_AUTH_TOKEN: ${{ secrets.DEMO_AUTH_TOKEN }}
      MATERIALS_PROJECT_API_KEY: ${{ secrets.MATERIALS_PROJECT_API_KEY }}

    steps:
      - name: Prepare environment variables
        shell: bash -l {0}
        run: |
          export DEMO_ACCOUNT_ID="${{ secrets.DEMO_ACCOUNT_ID }}"
          echo "DEMO_ACCOUNT_ID=${DEMO_ACCOUNT_ID}" >> $GITHUB_ENV

          export DEMO_AUTH_TOKEN="${{ secrets.DEMO_AUTH_TOKEN }}"
          echo "DEMO_AUTH_TOKEN=${DEMO_AUTH_TOKEN}" >> $GITHUB_ENV

      - name: Checkout this repository
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          set -euo pipefail

          pip list

          pip install virtualenv
          virtualenv .env
          source .env/bin/activate

          pip install --no-deps -r requirements.txt
          pip install --no-deps -e .

          pip install nbstripout
          pip install --upgrade numpy

          pip list

      - name: Update utils/settings.json
        shell: python
        run: |
          import os, json

          settings_file = "utils/settings.json"

          with open(settings_file, "r") as fp:
              settings = json.load(fp)

          settings["ACCOUNT_ID"] = os.getenv("DEMO_ACCOUNT_ID", "")
          settings["AUTH_TOKEN"] = os.getenv("DEMO_AUTH_TOKEN", "")
          settings["MATERIALS_PROJECT_API_KEY"] = os.getenv("MATERIALS_PROJECT_API_KEY", "")

          with open(settings_file, "w") as fp:
              json.dump(settings, fp, indent=4)

      - name: Render notebooks
        run: |
          set -euo pipefail

          source .env/bin/activate
          bash scripts/render-notebooks.sh

          cp -v examples/**/*.html docs/

      - uses: actions/upload-artifact@v3
        with:
          name: rendered-notebooks
          path: examples/

      - name: Deploy documentation to Exabyte-io.github.io
        if: github.repository_owner == 'Exabyte-io' && github.ref_name == 'feature/SOF-6690-docs'
        # We pin to the SHA, not the tag, for security reasons.
        # https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/security-hardening-for-github-actions#using-third-party-actions
        uses: peaceiris/actions-gh-pages@bbdfb200618d235585ad98e965f4aafc39b4c501  # v3.7.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: dev-with-documentation
          publish_dir: ./docs/
          keep_files: true  # Keep old files.
          force_orphan: false  # Keep git history.
